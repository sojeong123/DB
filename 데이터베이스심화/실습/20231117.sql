--강의 자료 10
--15
SELECT TO_CHAR(SYSDATE, 'YYYY/MM/DD') AS 타입1,
TO_CHAR(SYSDATE, 'YYYY.MM.DD.HH24.MI.SS') AS 타입2,
TO_CHAR(SYSDATE) AS 타입3 FROM DUAL;

SELECT
EXTRACT (YEAR FROM TO_DATE('20220123', 'YYYY/MM/DD'))
AS 연도 FROM DUAL;

--16
SELECT TO_CHAR(SYSDATE, 'YYYY.MM.DD.HH24.MI.SS') FROM DUAL;

--17
--STUDENT 테이블에서 S_NAME, S_BIRTH와 함께 나이를 출력하시오.
SELECT * FROM STUDENT;

SELECT S_NAME, S_BIRTH
FROM STUDENT
WHERE ;
--답안
SELECT S_NAME, S_BIRTH,
EXTRACT(YEAR FROM SYSDATE)-EXTRACT(YEAR FROM S_BIRTH)AS AGE
FROM STUDENT;

--STUDENT 테이블에서 S_NAME, S_BIRTH와 함께 오늘까지 지난 날 수를 출력하시오.
SELECT S_NAME, S_BIRTH
EXTRACT(YEAR FROM S_BIRTH) AS AGE
FROM STUDENT;
--답안
SELECT S_NAME, S_BIRTH,
TRUNC(SYSDATE-S_BIRTH) AS RESULT
FROM STUDENT ;

--19
SELECT S_NAME,S_SCORE,
CASE
    WHEN S_SCORE >= 90 THEN 'BEST'
    ELSE '***'
END AS NEW_SCORE
FROM STUDENT;
--S_SCORE가 250이상이면 >>>, 그 외에는 <<<
SELECT S_SCORE2,
CASE
    WHEN S_SCORE2 >= 250 THEN '크다'
    ELSE '작다'
END AS NEW_SCORE
FROM STUDENT;

--20
--Searched Case Expression
SELECT S_NAME,S_SCORE,
CASE
    WHEN S_SCORE >= 90 THEN 'A'
    WHEN S_SCORE >= 80 THEN 'B'
    WHEN S_SCORE >= 70 THEN 'C'
    WHEN S_SCORE >= 60 THEN 'D'
    ELSE 'F'
END AS NEW_SCORE
FROM STUDENT;

--Simple Case Expression
SELECT S_NAME,S_CODE,
CASE S_CODE
    WHEN 'A1000' THEN '1층'
    WHEN 'B1000' THEN '2층'
    WHEN 'C1000' THEN '3층'
    WHEN 'D1000' THEN '4층'
    ELSE '대기'
END AS 강의실
FROM STUDENT;

--21
SELECT S_NAME, S_SCORE,
CASE
    WHEN S_SCORE >= 90 THEN '장학생'
    WHEN S_SCORE BETWEEN 75 AND 89 THEN '보통'
    ELSE '노력대상'
END AS RESULT
FROM STUDENT;

--23
SELECT S_NAME,S_CODE,
DECODE(S_CODE,
    'A1000', '1층',
    'B1000','2층',
    'C1000', '3층',
    'D1000','4층',
    '대기') AS 강의실
FROM STUDENT;

--24
SELECT S_NAME, S_ENGNAME FROM STUDENT
WHERE S_NAME='대한민국';

--25
--NVL
SELECT S_NAME,S_ENGNAME, NVL(S_ENGNAME, '없음')
AS NAME
FROM STUDENT;
--NULLIF
SELECT S_NAME,S_ENGNAME,
NULLIF(S_ENGNAME,'RUBY')
FROM STUDENT;
--COALESCE
SELECT S_ENGNAME, S_NAME,
COALESCE(S_ENGNAME,S_NAME)
FROM STUDENT;

--27
SELECT S_ENGNAME,S_NAME,
    CASE
        WHEN S_ENGNAME IS NOT NULL THEN S_ENGNAME
    ELSE(
        CASE
            WHEN S_NAME IS NOT NULL THEN S_NAME ELSE NULL
        END)
END AS NAME
FROM STUDENT;

--자격증 시험에서 RETURN, IS, BEGIN, END가 괄호넣기로 나옴.
CREATE FUNCTION GET_SS(SCORE IN NUMBER)RETURN VARCHAR2
IS
BEGIN
    IF SCORE >= 80 THEN RETURN 'PASS';
    ELSE RETURN 'FAIL';
    END IF;
END;

SELECT GET_SS(90) FROM DUAL;
DROP FUNCTION GET_SS;